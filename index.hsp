#runtime "hsp3cl"
/*

HSP??R?[???o?b?N???W???[??
HSP3.5 beta 3?????m?F
?p?u???b?N?h???C?????
CC0 1.0????C?Z???X?????(CC0??R?????Y?????? http://creativecommons.org/publicdomain/zero/1.0/deed.ja)


?R?[???o?b?N??????
makeclbkfunc p1,p2,3,p4
p1=?????              ?R?[???o?b?N??????K?v??????n???????|?C???^(?T?u???[?`???????R?[???o?b?N??????|?C???^)????????
p2=0~(0)               ?n????????????? (p2<=0???????????????)
p3=???x????            ?R?[???o?b?N????????????T?u???[?`??????x??
p4=0|1(0)              ??яo???K????? 0=stdcall 1=cdecl   p4??????????stdcall??????

??????????????? (p2<=0) ??A??яo?????? lparam=NULL?A wparam=0 ??????
????????????     (p2>0)  ??A??яo?????? lparam=???????o?b?t?@?A?h???X?A wparam=?????????? ??????
?????????????m??G???[??? ??A??яo?????? lparam=NULL?A wparam=0 ??????

?T?u???[?`???????????????? stat ????l???R?[???o?b?N????????l??????

?????o?b?t?@??T?u???[?`?????????????????? (lparam?Awparam??l??ρE???????)
argclbkfunc ??????????擾??????A?????????????K?v??????Awparam?Alparam??l??j????????????


lparam??wparam????????????擾
argclbkfunc p1
p1=?z??              ?????????擾???????^?z??

?????????????^?z?????? p1 ?????????? (?????o?b?t?@????R?s?[??????)
?R?[???o?b?N????????????T?u???[?`??????g?p???????????
wparam ?? lparam ???擾?O??j???????????????яo?????????g?p???????????
lparam ?? wparam ??`?F?b?N??s???????

*/




//???W???[??
//-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|//
#ifndef _modulemakeclbkfuncah_def_
#define _modulemakeclbkfuncah_def_
#module

	#uselib "kernel32.dll"
	#func VirtualProtect "VirtualProtect" sptr,int,int,var

	#const  FUNCSIZE     22         //?}?V????????
	#const  FUNCSIZEBYT  FUNCSIZE*4 //?}?V????????(?o?C?g)

	#const  PAGE_EXECUTE_READWRITE  $00000040

	#deffunc makeclbkfunc var p_bin, int numargs, label label_sub, int clmode,\
	local hspctx,\
	local int_numargs,\
	local lbl_tmp,\
	local int_tmp,\
	local bin,\
	local int_stat

		lbl_tmp = label_sub  //?T?u???[?`?????x??
		mref hspctx,68
		int_numargs = numargs & $80003FFF
		int_stat=stat        //stat????

		//?e?[?u??????????m??
		static_arr_str_bin(static_int_idx) = "" // ????? / ?v?f???
		memexpand static_arr_str_bin(static_int_idx), FUNCSIZEBYT
		p_bin = varptr(static_arr_str_bin(static_int_idx))

		//?}?V????
		dupptr bin, p_bin, FUNCSIZEBYT
		bin(0)  = $BE56C031       , varptr(hspctx(9)), $B9044689, int_numargs , $8D530689
		bin(5)  = $0000989E       , $7EC98500        , $E1C1511C, $13FF5102   , $04468959
		bin(10) = $74C08559       , $FF0E890C        , $8F088C74, $E2FC8844   , $68C689F6
		bin(15) = lpeek(lbl_tmp,0), $581C53FF        , $0574F685, $0453ff56   , $54838B58
		bin(20) = $5B000002       , $0000C35E
		if clmode==0 & int_numargs>0{
			bin(FUNCSIZE-1) = $C25E | int_numargs << 18  //stdcall????????????????X?^?b?N????
		}

		static_int_idx++
		VirtualProtect p_bin, FUNCSIZEBYT, PAGE_EXECUTE_READWRITE, int_tmp
		return int_stat


	#deffunc argclbkfunc array arr_int_args,\
	local cln_arr_int_tmp

		dupptr cln_arr_int_tmp, lparam, wparam*4
		dim arr_int_args, wparam
		memcpy arr_int_args, cln_arr_int_tmp, wparam*4
		return

#global

#endif

#include "Rabbit2000.as"

#uselib "crtdll.dll"
#cfunc _getch "_getch"
#cfunc _kbhit "_kbhit"
#func putchar "putchar" int

sdim memory,65536*16
//bload "testcode.bin",memory
bload "startrab.bin",memory
dupptr memory4cpm,varptr(memory)+65536,65536,2
dupptr memory4cpmdc,varptr(memory)+65536+0xdc00,65536-0xdc00,2
dupptr memory4cpmf2,varptr(memory)+65536+0xf200,65536-0xf200,2
dupptr memory4cpmfc,varptr(memory)+65536+0xfc00,65536-0xfc00,2
bload "cpmbios.bin",memory4cpm
sdim thunkbin,1024
bload "thunk.bin",thunkbin
memcpy memory,thunkbin,1024,0xfc00+(65536),0

sdim cpmdiskfname,256,128
cpmdiskfname(0)="cpm.img"

makeclbkfunc clbk, 3, *RMKEARCH,1

r2k=getr2k()
r2kcpureset r2k
dupptr r2kstrct,r2k,296,4

#include "vpaging.as"

dim memptrtmp,4096//1048576
repeat 4096:memptrtmp(cnt)=varptr(memory)+cnt*4096:loop
memaccessptrset varptr(memptrtmp),4096//16777216
//repeat 12:memptrtmp(cnt+3392)=varptr(vram48bt)+(cnt*4096):loop

setmemaccess4nonmac clbk
setmemaccess_r2k r2k,varptr(memaccessmod)

#include "kernel32.as"
cimode=0
GetStdHandle -10:hconsoleinput=stat
GetConsoleMode hconsoleinput,varptr(cimode)
SetConsoleMode hconsoleinput,cimode&((-1)-1)

dupptr reg,getr2kreg(r2k),4096,4

repeat
repeat 100000000
execcpu_r2k r2k
if (cnt\80000)==0{if _kbhit(){putchario_r2k r2k,_getch(),0}:await}
loop
//if _kbhit(){putchario_r2k r2k,_getch(),0}
await
loop

//bsave "r2kstrct.bin",r2kstrct

stop
*RMKEARCH
argclbkfunc argv
switch argv(2)
case 0
poke memory,argv(0),argv(1)
return 0
swbreak
case 1
return peek(memory,argv(0))
swbreak
case 2
	switch argv(0)
	case 0
	poke sectrk,0,argv(1)
	swbreak
	case 1
	poke sectrk,1,argv(1)
	swbreak
	case 2
	poke dmaaddr,0,argv(1)
	swbreak
	case 3
	poke dmaaddr,1,argv(1)
	swbreak
	case 4
	poke dmaaddr,2,argv(1)
	swbreak
	case 5
	exist cpmdiskfname((argv(1)>>1)&0xF):if strsize=-1{readfailed=1}else{readfailed=0
	dupptr dma128,varptr(memory)+dmaaddr,128,2:if (argv(1)&1){bload cpmdiskfname((argv(1)>>1)&0xF),dma128,128,128*sectrk}else{bsave cpmdiskfname((argv(1)>>1)&0xF),dma128,128,128*sectrk}
	}
	swbreak
	swend
swbreak
case 3
	switch argv(0)
	case 0
	return peek(sectrk,0)
	swbreak
	case 1
	return peek(sectrk,1)
	swbreak
	case 2
	return peek(dmaaddr,0)
	swbreak
	case 3
	return peek(dmaaddr,1)
	swbreak
	case 4
	return peek(dmaaddr,2)
	swbreak
	case 5
	return (readfailed&1)
	swbreak
	swend
swbreak
case 4
	switch argv(0)
	case 0
		putchar argv(1)//text4show="":poke text4show,0,argv(1):mes text4show,1
	swbreak
	swend
swbreak
swend
return 0
